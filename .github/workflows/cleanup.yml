name: Repository Housekeeping

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Preview saja (tanpa menghapus)"
        required: false
        default: "false"
      keep:
        description: "Simpan N run terbaru per workflow"
        required: false
        default: "2"
      days:
        description: "Hapus artifacts lebih tua dari N hari"
        required: false
        default: "2"
  schedule:
    - cron: "17 2 * * 0"
    - cron: "17 2 * * 4"

permissions:
  actions: write
  contents: read

concurrency:
  group: housekeeping-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prune:
    name: Prune Runs & Artifacts
    runs-on: ubuntu-latest

    steps:
      - name: Prepare Environment
        run: |
          sudo apt-get update -y
          sudo apt-get install -y gh jq

      - name: Resolve Inputs
        run: |
          echo "DRY_RUN=${{ github.event.inputs.dry_run || 'false' }}" >> "$GITHUB_ENV"
          echo "KEEP=${{ github.event.inputs.keep || '2' }}" >> "$GITHUB_ENV"
          echo "DAYS=${{ github.event.inputs.days || '2' }}" >> "$GITHUB_ENV"

      - name: Notify Start
        env:
          TG_TOKEN: ${{ secrets.TG_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
        run: |
          START_MSG=$'ðŸ§¹ Housekeeping mulai\nRepo: ${{ github.repository }}\nBranch: ${{ github.ref_name }}\ndry_run='"${DRY_RUN}"' â€¢ keep='"${KEEP}"' â€¢ days='"${DAYS}"
          printf "%s" "$START_MSG" | curl -s -X POST "https://api.telegram.org/bot${TG_TOKEN}/sendMessage" \
            -d chat_id="${TG_CHAT_ID}" \
            --data-urlencode text@- >/dev/null

      - name: Delete Old Workflow Runs
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          set -uo pipefail
          MAX_DELETE=300
          DELETED=0
          PAGE=1

          while [ "$DELETED" -lt "$MAX_DELETE" ]; do
            RESP="$(gh api repos/${{ github.repository }}/actions/runs -F status=completed -F per_page=100 -F page=$PAGE)"
            COUNT="$(echo "$RESP" | jq '.workflow_runs | length')"
            [ "$COUNT" -eq 0 ] && break

            echo "$RESP" | jq -r --argjson KEEP "$KEEP" '
              .workflow_runs
              | group_by(.workflow_id)
              | .[]
              | sort_by(.created_at) | reverse
              | .[$KEEP:] // []
              | .[].id
            ' | while read -r RUN_ID; do
                [ -z "${RUN_ID:-}" ] && continue
                if [ "${DRY_RUN}" = "true" ]; then
                  echo "skip ${RUN_ID}"
                else
                  OUT="$(gh api -H "Accept: application/vnd.github+json" -X DELETE repos/${{ github.repository }}/actions/runs/${RUN_ID} 2>&1)"
                  RC=$?
                  if [ $RC -eq 0 ]; then
                    DELETED=$((DELETED+1))
                    echo "[OK] deleted ${RUN_ID}"
                  else
                    if echo "$OUT" | grep -q "404"; then
                      echo "[SKIP] run ${RUN_ID} already gone (404)"
                    else
                      echo "[WARN] delete ${RUN_ID} failed (rc=$RC): $OUT"
                    fi
                  fi
                fi
                [ "$DELETED" -ge "$MAX_DELETE" ] && break
              done

            [ "$DELETED" -ge "$MAX_DELETE" ] && break
            PAGE=$((PAGE+1))
            sleep 1
          done

          echo "RUNS_DELETED=$DELETED" >> "$GITHUB_ENV"
          
      - name: Delete Old Artifacts
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          set -euo pipefail
          CUTOFF="$(date -u -d "${DAYS} days ago" +%s)"
          COUNT=0
          gh api repos/${{ github.repository }}/actions/artifacts -F per_page=100 \
          | jq -r --argjson CUT "$CUTOFF" '
              .artifacts[]
              | select(.expired == true or (.created_at | fromdateiso8601 < $CUT))
              | .id
            ' | while read -r AID; do
                [ -z "${AID:-}" ] && continue
                if [ "${DRY_RUN}" = "true" ]; then
                  echo "skip artifact ${AID}"
                else
                  gh api -X DELETE repos/${{ github.repository }}/actions/artifacts/${AID} >/dev/null 2>&1 || true
                  COUNT=$((COUNT+1))
                fi
              done
          echo "ARTS_DELETED=$COUNT" >> "$GITHUB_ENV"

      - name: Notify Result
        env:
          TG_TOKEN: ${{ secrets.TG_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
        run: |
          MSG=$'âœ… Housekeeping selesai\nâ€¢ dry_run='"${DRY_RUN}"$'\nâ€¢ keep='"${KEEP}"$'\nâ€¢ days='"${DAYS}"$'\nâ€¢ runs dihapus: '"${RUNS_DELETED:-0}"$'\nâ€¢ artifacts dihapus: '"${ARTS_DELETED:-0}"
          printf "%s" "$MSG" | curl -s -X POST "https://api.telegram.org/bot${TG_TOKEN}/sendMessage" \
            -d chat_id="${TG_CHAT_ID}" \
            --data-urlencode text@- \
            -d parse_mode=Markdown >/dev/null
