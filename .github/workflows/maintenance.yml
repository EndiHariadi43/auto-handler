name: Repository Housekeeping â€¢ Maintenance

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Preview saja (tanpa menghapus)"
        required: false
        default: "false"
      keep:
        description: "Simpan N run terbaru per workflow"
        required: false
        default: "0"
      days:
        description: "Hapus artifacts lebih tua dari N hari"
        required: false
        default: "1"
  schedule:
    - cron: "17 2 * * 0"
    - cron: "17 2 * * 4"
  repository_dispatch:
    types: [housekeeping]

permissions:
  actions: write
  contents: read

concurrency:
  group: housekeeping-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prune:
    name: Prune Runs & Artifacts
    runs-on: ubuntu-latest

    steps:
      - name: Prepare Environment
        run: |
          sudo apt-get update -y
          sudo apt-get install -y gh jq

      - name: Resolve Inputs
        env:
          IN_DRY:  ${{ github.event.inputs.dry_run }}
          IN_KEEP: ${{ github.event.inputs.keep }}
          IN_DAYS: ${{ github.event.inputs.days }}
          DP_DRY:  ${{ github.event.client_payload.dry_run }}
          DP_KEEP: ${{ github.event.client_payload.keep }}
          DP_DAYS: ${{ github.event.client_payload.days }}
        run: |
          set -e
          DRY_RUN="${DP_DRY:-${IN_DRY:-false}}"
          KEEP="${DP_KEEP:-${IN_KEEP:-2}}"
          DAYS="${DP_DAYS:-${IN_DAYS:-2}}"

          case "${DRY_RUN,,}" in true|1|yes) DRY_RUN=true ;; *) DRY_RUN=false ;; esac
          KEEP=$(( ${KEEP:-2} + 0 ))
          DAYS=$(( ${DAYS:-2} + 0 ))
          [ $KEEP -lt 0 ] && KEEP=0
          [ $KEEP -gt 20 ] && KEEP=20
          [ $DAYS -lt 1 ] && DAYS=1
          [ $DAYS -gt 30 ] && DAYS=30

          echo "DRY_RUN=$DRY_RUN" >> "$GITHUB_ENV"
          echo "KEEP=$KEEP"       >> "$GITHUB_ENV"
          echo "DAYS=$DAYS"       >> "$GITHUB_ENV"

      - name: Notify Start
        env:
          TG_TOKEN:  ${{ secrets.TG_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
        run: |
          if [ -n "${TG_TOKEN:-}" ] && [ -n "${TG_CHAT_ID:-}" ]; then
            cat > msg.txt <<'EOF'
ðŸ§¹ Housekeeping mulai
Repo: ${REPO}
Branch: ${BRANCH}
dry_run=${DRY_RUN} â€¢ keep=${KEEP} â€¢ days=${DAYS}
EOF
            REPO="${{ github.repository }}"
            BRANCH="${{ github.ref_name }}"
            # expand var lalu kirim
            eval "printf '%s' \"$(cat msg.txt)\"" | curl -s -X POST "https://api.telegram.org/bot${TG_TOKEN}/sendMessage" \
              -d chat_id="${TG_CHAT_ID}" --data-urlencode text@- >/dev/null
          fi

      - name: Delete Old Workflow Runs
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set +e
          MAX_DELETE=300
          DELETED=0
          PAGE=1
          while [ "$DELETED" -lt "$MAX_DELETE" ]; do
            RESP="$(gh api "repos/${{ github.repository }}/actions/runs" -F status=completed -F per_page=100 -F page="$PAGE" 2>/dev/null)"
            [ -z "$RESP" ] && break
            COUNT="$(echo "$RESP" | jq '(.workflow_runs // []) | length')"
            [ "$COUNT" -eq 0 ] && break

            echo "$RESP" | jq -r --argjson KEEP "$KEEP" '
              (.workflow_runs // [])
              | group_by(.workflow_id) | .[]
              | sort_by(.created_at) | reverse
              | .[$KEEP:] // [] | .[].id
            ' | while read -r RUN_ID; do
                [ -z "${RUN_ID:-}" ] && continue
                if [ "$DRY_RUN" = "true" ]; then
                  echo "[DRY-RUN] skip ${RUN_ID}"
                else
                  gh api -H "Accept: application/vnd.github+json" -X DELETE "repos/${{ github.repository }}/actions/runs/${RUN_ID}" >/dev/null 2>&1 \
                    && { DELETED=$((DELETED+1)); echo "[OK] deleted ${RUN_ID}"; } \
                    || echo "[SKIP] cannot delete ${RUN_ID}"
                fi
                [ "$DELETED" -ge "$MAX_DELETE" ] && break
              done

            [ "$DELETED" -ge "$MAX_DELETE" ] && break
            PAGE=$((PAGE+1))
            sleep 1
          done
          echo "RUNS_DELETED=$DELETED" >> "$GITHUB_ENV"
          exit 0

      - name: Delete Old Artifacts
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set +e
          CUTOFF="$(date -u -d "${DAYS} days ago" +%s)"
          COUNT=0
          PAGE=1
          while :; do
            RESP="$(gh api "repos/${{ github.repository }}/actions/artifacts" -F per_page=100 -F page="$PAGE" 2>/dev/null)"
            [ -z "$RESP" ] && break
            N="$(echo "$RESP" | jq '(.artifacts // []) | length')"
            [ "$N" -eq 0 ] && break

            echo "$RESP" | jq -r --argjson CUT "$CUTOFF" '
              (.artifacts // [])
              | map(select(.expired == true or (.created_at | fromdateiso8601 < $CUT)))
              | .[].id
            ' | while read -r AID; do
                [ -z "${AID:-}" ] && continue
                if [ "$DRY_RUN" = "true" ]; then
                  echo "[DRY-RUN] skip artifact ${AID}"
                else
                  gh api -X DELETE "repos/${{ github.repository }}/actions/artifacts/${AID}" >/dev/null 2>&1 || true
                  COUNT=$((COUNT+1))
                fi
              done

            PAGE=$((PAGE+1))
            sleep 1
          done
          echo "ARTS_DELETED=$COUNT" >> "$GITHUB_ENV"
          exit 0

      - name: Notify Result
        env:
          TG_TOKEN:  ${{ secrets.TG_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
        run: |
          if [ -n "${TG_TOKEN:-}" ] && [ -n "${TG_CHAT_ID:-}" ]; then
            {
              echo "âœ… Housekeeping selesai"
              echo "â€¢ dry_run=${DRY_RUN}"
              echo "â€¢ keep=${KEEP}"
              echo "â€¢ days=${DAYS}"
              echo "â€¢ runs dihapus: ${RUNS_DELETED:-0}"
              echo "â€¢ artifacts dihapus: ${ARTS_DELETED:-0}"
            } | curl -s -X POST "https://api.telegram.org/bot${TG_TOKEN}/sendMessage" \
                 -d chat_id="${TG_CHAT_ID}" --data-urlencode text@- >/dev/null
          fi
